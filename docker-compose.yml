# Starts Jenkins Server and Verdaccio local registry to
# Reduce bandwidth usage during testing and builds.
# Testing and deployment dockerfiles have to account for this
# And link their npm registry as follows:
# 1 - first make sure that contailer is networked to 'cicdnet' external network. 
# 2 - inside Dockerfiles that jenkins will run make sure 
#     to set verdaccio registry: 'npm set registry http://verdaccio:4873/'

version: "3"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: ci-nginx-proxy
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - nginx_data:/etc/nginx
      - nginx_html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      nginx-proxy-network:
    logging:
      options:
        max-size: "5m"
        max-file: "3"

  # dockergen:
  #   image: jwilder/docker-gen:0.7.3
  #   container_name: nginx-proxy-gen
  #   depends_on:
  #     - nginx
  #   command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  #   volumes:
  #     - nginx_conf:/etc/nginx/conf.d
  #     - nginx_vhost:/etc/nginx/vhost.d
  #     - nginx_html:/usr/share/nginx/html
  #     - nginx_certs:/etc/nginx/certs
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
  #   logging:
  #     options:
  #       max-size: "5m"
  #       max-file: "3"

  # letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: nginx-proxy-le
  #   depends_on:
  #     - nginx
  #     - dockergen
  #   environment:
  #     NGINX_PROXY_CONTAINER: nginx-proxy
  #     NGINX_DOCKER_GEN_CONTAINER: nginx-proxy-gen
  #   volumes:
  #     - nginx_conf:/etc/nginx/conf.d
  #     - nginx_vhost:/etc/nginx/vhost.d
  #     - nginx_html:/usr/share/nginx/html
  #     - nginx_certs:/etc/nginx/certs
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   logging:
  #     options:
  #       max-size: "5m"
  #       max-file: "3"

  verdaccio:
    image: verdaccio/verdaccio
    container_name: verdaccio_for_ci
    restart: always
    environment:
      VERDACCIO_PORT: 4873 # leave verdaccio to internal access only.
      VERDACCIO_PROTOCOL: http
    ports: # Needed because we can access over SSH tunnel.
     - "4873:4873"
    expose: 
      - "4873"
    volumes:
      - ./verdaccio/conf:/verdaccio/conf
      - ./verdaccio/plugins:/verdaccio/plugins
      - verdaccio-vol:/verdaccio/storage
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    networks:
      npmreg-network:

  jenkins:
    image: dmitryr117/jenkinsci:latest
    container_name: jenkins_ci
    restart: always
    depends_on:
      - nginx-proxy
      - verdaccio
      # - letsencrypt
    environment:
      VIRTUAL_HOST: ${JENKINS_DOMAIN}
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: ${JENKINS_DOMAIN}
      LETSENCRYPT_EMAIL: ${LE_USER_EMAIL}
      #JENKINS_OPTS: "--httpPort=80" # needed to work with reverse-proxy
    expose: 
      - "8080"
    #ports: # no longer needed as we will access via reverse-proxy.
    #  - "8080:8080"
    volumes:
      - jenkins-vol:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    networks:
      nginx-proxy-network:
      npmreg-network:

volumes:
  nginx_data:
  nginx_html:
  verdaccio-vol:
  jenkins-vol:
  
networks:
  nginx-proxy-network:
    external: 
      name: cicdnet
  npmreg-network:

