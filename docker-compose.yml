# Starts Jenkins Server and Verdaccio local registry to
# Reduce bandwidth usage during testing and builds.
# Testing and deployment dockerfiles have to account for this
# And link their npm registry as follows:
# 1 - first make sure that contailer is networked to 'cicdnet' external network. 
# 2 - inside Dockerfiles that jenkins will run make sure 
#     to set verdaccio registry: 'npm set registry http://verdaccio:4873/'

version: "3"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: ci-nginx-proxy
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - nginx_data:/etc/nginx
      - nginx_html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy" # Label needed for Let's Encrypt companion container
    networks:
      nginx-proxy-network:
    logging:
      options:
        max-size: "5m"
        max-file: "3"

  letsencrypt-nginx-proxy-companion:
      image: jrcs/letsencrypt-nginx-proxy-companion
      restart: always
      container_name: letsencrypt-nginx-proxy-companion
      volumes:
        - nginx_data:/etc/nginx
        - nginx_html:/usr/share/nginx/html
        - /var/run/docker.sock:/var/run/docker.sock:ro
      depends_on: # Make sure we start nginx proxy container first
          - nginx-proxy

  verdaccio:
    image: verdaccio/verdaccio
    container_name: verdaccio_for_ci
    restart: always
    environment:
      VERDACCIO_PORT: 4873 # leave verdaccio to internal access only.
      VERDACCIO_PROTOCOL: http
    ports: # Needed because we can access over SSH tunnel.
     - "4873:4873"
    expose: 
      - "4873"
    volumes:
      - ./verdaccio/conf:/verdaccio/conf
      - ./verdaccio/plugins:/verdaccio/plugins
      - verdaccio-vol:/verdaccio/storage
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    networks:
      npmreg-network:

  jenkins:
    image: dmitryr117/jenkinsci:latest
    container_name: jenkins_ci
    restart: always
    depends_on:
      - nginx-proxy
      - verdaccio
      - letsencrypt-nginx-proxy-companion
    environment:
      VIRTUAL_HOST: ${JENKINS_DOMAIN}
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: ${JENKINS_DOMAIN}
      LETSENCRYPT_EMAIL: ${LE_USER_EMAIL}
      #JENKINS_OPTS: "--httpPort=80" # needed to work with reverse-proxy
    expose: 
      - "8080"
    #ports: # no longer needed as we will access via reverse-proxy.
    #  - "8080:8080"
    volumes:
      - jenkins-vol:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    networks:
      nginx-proxy-network:
      npmreg-network:

volumes:
  nginx_data:
  nginx_html:
  verdaccio-vol:
  jenkins-vol:
  
networks:
  nginx-proxy-network:
    external: 
      name: cicdnet
  npmreg-network:

